// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  full_name  String
  email      String?  @unique
  phone      String   @unique
  role       String   @default("user")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  otps Otp[]
  Auth Auth?
}

model Auth {
  id           Int     @id @default(autoincrement())
  otp_verified Boolean @default(false)
  deactivated  Boolean @default(false)
  blocked      Boolean @default(false)

  user_id Int  @unique
  user    User @relation(fields: [user_id], references: [id])
}

model Otp {
  id        Int      @default(autoincrement())
  code      String
  type      String
  createdAt DateTime @default(now())
  expireAt  DateTime

  user_id Int
  User    User @relation(fields: [user_id], references: [id])

  @@id([user_id, type])
}

model Product {
  id                Int     @id @default(autoincrement())
  name              String
  short_description String?
  price             Float
  unit              String?

  Category    Category[]
  ingredients IngredientItem[] @relation("ProductToIngredient")
  usedIn      IngredientItem[] @relation("IngredientToProduct")
}

model IngredientItem {
  id                  Int    @id @default(autoincrement())
  productId           Int
  ingredientProductId Int
  quantity            String

  product           Product @relation("ProductToIngredient", fields: [productId], references: [id])
  ingredientProduct Product @relation("IngredientToProduct", fields: [ingredientProductId], references: [id])

  @@unique([productId, ingredientProductId])
}

model Category {
  id           Int     @id @default(autoincrement())
  name         String  @unique
  description  String?
  icon         String?
  banner_image String?
  parent_id    Int?

  product Product[]

  parent Category?  @relation("parentChild", fields: [parent_id], references: [id])
  child  Category[] @relation("parentChild")
}

model Storefront_Product_Data {
  id Int @id @default(autoincrement())
}
